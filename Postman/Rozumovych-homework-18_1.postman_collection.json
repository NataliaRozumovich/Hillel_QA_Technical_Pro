{
	"info": {
		"_postman_id": "b61a640d-a8c2-4efd-866a-4467dffce566",
		"name": "Rozumovych-homework-18_1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4490689"
	},
	"item": [
		{
			"name": "Book ISBN Numbers",
			"item": [
				{
					"name": "Is Valid ISBN13 Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseText = pm.response.text();\r",
									"const cheerio = require(\"cheerio\");\r",
									"const $ = cheerio.load(responseText);\r",
									"const result = ($(\"m\\\\:IsValidISBN13Result\").text());\r",
									"console.log(result);\r",
									"\r",
									"//Check that response structure is aligned with documentation for SOAP 1.1\r",
									"pm.test(\"Attr1: Response should use 'soap:Envelope' tag as per documentation\", function () {\r",
									"    pm.expect($(\"soap\\\\:Envelope\").length).to.be.greaterThan(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Attr2: Response should use 'soap:Body' tag as per documentation\", function () {\r",
									"    pm.expect($(\"soap\\\\:Body\").length).to.be.greaterThan(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Attr3: Response should use 'IsValidISBN13Response' tag as per documentation\", function () {\r",
									"    pm.expect($(\"IsValidISBN13Response\").length).to.be.greaterThan(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Attr4: Response should use 'IsValidISBN13Result' tag as per documentation\", function () {\r",
									"    pm.expect($(\"IsValidISBN13Result\").length).to.be.greaterThan(0);\r",
									"});\r",
									"\r",
									"//Check the response content for SOAP 1.1\r",
									"pm.test(\"Check that ISBN number is valid\", function () {\r",
									"    pm.expect(result).to.be.eql(\"true\")\r",
									"});\r",
									"\r",
									"pm.test(\"Check that response Content-Type is 'text/xml; charset=utf-8'\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/xml; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Check that 'soap:Envelope' tag contains 'xmlns:soap' attribute with the expected value\", function () {\r",
									"    pm.expect($(\"soap\\\\:Envelope\").attr(\"xmlns:soap\")).to.eql(\"http://schemas.xmlsoap.org/soap/envelope/\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check that 'soap:Body' tag contains 'm:IsValidISBN13Response' tag with the expected value in the 'xmlns' attribute\", function () {\r",
									"    pm.expect($(\"soap\\\\:Body\").find(\"m\\\\:IsValidISBN13Response\").attr(\"xmlns:m\")).to.eql(\"http://webservices.daehosting.com/ISBN\"\r",
									"    );\r",
									"});\r",
									"\r",
									"pm.test(\"Check that 'm:IsValidISBN13Response' tag contains 'm:IsValidISBN13Result' tag\", function () {\r",
									"    pm.expect($('m\\\\:IsValidISBN13Response').find('m\\\\:IsValidISBN13Result').length).to.be.greaterThan(0)\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml; charset=utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN13 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>978-1-4612-9090-2</sISBN>\n    </IsValidISBN13>\n  </soap:Body>\n</soap:Envelope>"
						},
						"url": {
							"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
							"protocol": "http",
							"host": [
								"webservices",
								"daehosting",
								"com"
							],
							"path": [
								"services",
								"isbnservice.wso"
							]
						},
						"description": "The test is done by calculation on the first 12 digits and compare the result with the checksum number at the end. You have to pass a 13 digits number."
					},
					"response": []
				},
				{
					"name": "Is Valid ISBN10 Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseText = pm.response.text();\r",
									"const cheerio = require(\"cheerio\");\r",
									"const $ = cheerio.load(responseText);\r",
									"const result = ($(\"m\\\\:IsValidISBN10Result\").text());\r",
									"console.log(result);\r",
									"\r",
									"//Check that response structure is aligned with documentation for SOAP 1.2\r",
									"pm.test(\"Attr1: Response should use 'soap12:Envelope' tag as per documentation\", function () {\r",
									"    pm.expect($(\"soap12\\\\:Envelope\").length).to.be.greaterThan(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Attr2: Response should use 'soap12:Body' tag as per documentation\", function () {\r",
									"    pm.expect($(\"soap12\\\\:Body\").length).to.be.greaterThan(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Attr3: Response should use 'IsValidISBN10Response' tag as per documentation\", function () {\r",
									"    pm.expect($(\"IsValidISBN10Response\").length).to.be.greaterThan(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Attr4: Response should use 'IsValidISBN10Result' tag as per documentation\", function () {\r",
									"    pm.expect($(\"IsValidISBN10Result\").length).to.be.greaterThan(0);\r",
									"});\r",
									"\r",
									"//Check the response content for SOAP 1.2\r",
									"pm.test(\"Check that ISBN number is valid\", function () {\r",
									"    pm.expect(result).to.be.eql(\"true\")\r",
									"});\r",
									"\r",
									"pm.test(\"Check that response Content-Type is 'application/soap+xml; charset=utf-8'\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/soap+xml; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Check that 'soap:Envelope' tag contains valid value in the 'xmlns:soap' attribute with value 'http://www.w3.org/2003/05/soap-envelope'\", function () {\r",
									"    pm.expect($(\"soap\\\\:Envelope\").attr(\"xmlns:soap\")).to.eql(\"http://www.w3.org/2003/05/soap-envelope\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check that 'soap:Body' tag contains 'm:IsValidISBN10Response' tag with the expected value in the 'xmlns' attribute\", function () {\r",
									"    pm.expect($(\"soap\\\\:Body\").find(\"m\\\\:IsValidISBN10Response\").attr(\"xmlns:m\")).to.eql(\"http://webservices.daehosting.com/ISBN\"\r",
									"    );\r",
									"});\r",
									"\r",
									"pm.test(\"Check that 'm:IsValidISBN10Response' tag contains 'm:IsValidISBN13Result' tag\", function () {\r",
									"    pm.expect($('m\\\\:IsValidISBN10Response').find('m\\\\:IsValidISBN10Result').length).to.be.greaterThan(0)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true,
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/soap+xml; charset=utf-8",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/soap+xml",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "webservices.daehosting.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap12:Envelope xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\n  <soap12:Body>\n    <IsValidISBN10 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>0-19-852663-6</sISBN>\n    </IsValidISBN10>\n  </soap12:Body>\n</soap12:Envelope>"
						},
						"url": {
							"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
							"protocol": "http",
							"host": [
								"webservices",
								"daehosting",
								"com"
							],
							"path": [
								"services",
								"isbnservice.wso"
							]
						},
						"description": "The test is done by calculation on the first 9 digits and compare the result with the checksum number at the end. You have to pass a 10 digits number or 8 digits and an X."
					},
					"response": []
				}
			],
			"description": "SOAP APIs for book ISBN numbers.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"requests": {},
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that response is not empty\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"Check that Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Check that xml version is '1.0'\", function () {\r",
							"    pm.expect(pm.response.text().startsWith('<?xml version=\"1.0\"')).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Check that xml encoding is 'UTF-8'\", function () {\r",
							"    pm.expect(pm.response.text().includes('encoding=\"utf-8\"')).to.be.true;\r",
							"});"
						]
					}
				}
			]
		}
	]
}